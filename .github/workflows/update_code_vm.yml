name: Push DAGs changes to VM

on:
  #push:
    # branches:
    #   - main
    #   - dev-data-generation
    # paths:
    #  - "data-generation/**"
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Test Network Connection
        run: |
          nslookup ${{ secrets.SERVER_IP }} || echo "DNS Lookup Failed"
          
      - name: execute remote ssh commands with password
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SSH_PORT }}
          debug: true
          script: |
              # Define repo path
              REPO_PATH="$(find /home -type d -name "LinkedLens" 2>/dev/null | head -n 1)"
              echo "Repo path is: $REPO_PATH"
              if [ ! -d "$REPO_PATH" ]; then
                echo "Repo not found, cloning..."
                cd /home/${{ secrets.SERVER_USERNAME }}/mlops
                git clone https://github.com/jaynanduri/LinkedLens.git
              fi
              echo "Did not clone repo"
              cd "$REPO_PATH"
  

              echo "Updating code from git.."
              git fetch origin main
              git reset --hard origin/main
              git clean -fd
              git pull origin main
  
              # Rewrite .env file
              echo "Creating/Re-writing .env file"
              cat > .env <<EOF
              OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
              DB_NAME=${{ secrets.DB_NAME }}
              DB_CREDENTIALS_PATH=${{ secrets.DB_CREDENTIALS_PATH }}
              AIRFLOW_UID=${{ secrets.AIRFLOW_UID }}
              MAX_OPEN_AI_REQUEST_PER_MIN=${{ secrets.MAX_OPEN_AI_REQUEST_PER_MIN }}
              MAX_OPEN_AI_REQUEST_PER_DAY=${{ secrets.MAX_OPEN_AI_REQUEST_PER_DAY }}
              OPEN_ROUTER_BASE_URL=${{ secrets.OPEN_ROUTER_BASE_URL }}
              SMTP_SERVER=${{ secrets.SMTP_SERVER }}
              SMTP_STARTTLS=${{ secrets.SMTP_STARTTLS }}
              SMTP_USER=${{ secrets.SMTP_USER }}
              SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
              SMTP_PORT=${{ secrets.SMTP_PORT }}
              SMTP_EMAIL=${{ secrets.SMTP_EMAIL }}
              SMTP_TIMEOUT=${{ secrets.SMTP_TIMEOUT }}
              SMTP_RETRY_LIMIT=${{ secrets.SMTP_RETRY_LIMIT }}
              SMTP_RECIPIENT_EMAILS=${{ secrets.SMTP_RECIPIENT_EMAILS }}
              AIRFLOW_WWW_USER_USERNAME=${{ secrets.AIRFLOW_WWW_USER_USERNAME }}
              AIRFLOW_WWW_USER_PASSWORD=${{ secrets.AIRFLOW_WWW_USER_PASSWORD }}
<<<<<<<< HEAD:.github/workflows/update_code_vm.yml
              PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}
              PINECONE_ENVIRONMENT=${{ secrets.PINECONE_ENVIRONMENT }}
              GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
              LOG_LEVEL=${{ secrets.LOG_LEVEL }}
              HUGGINGFACE_API_KEY=${{ secrets.HUGGINGFACE_API_KEY }}
========
>>>>>>>> 634915b (update workflows):.github/workflows/update_code_vm_yml
              EOF
              echo ".env file created"

              #Verifying PWD
              if [ -d "./data-generation" ]; then
                echo "Correct directory"
              else
                echo "Repository not found. Exiting.."
                exit 1
              fi
              
              cd data-generation
              echo "Current directory: $(pwd)"
              
              mkdir -p dags/src/credentials
          
              echo "Creating/Re-writing linkedlens-firestore-srvc-acc.json..."
<<<<<<<< HEAD:.github/workflows/update_code_vm.yml
              echo '${{ secrets.GCP_CREDENTIALS_JSON }}' > dags/src/credentials/linkedlens-firestore-srvc-acc.json
========
              echo '${{ secrets.GCP_CREDENTIALS_JSON }}' > dags/src/credentials/linkedlens-firestore-srvc-acc.json
>>>>>>>> 634915b (update workflows):.github/workflows/update_code_vm_yml
