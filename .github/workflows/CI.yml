name: Run Tests

on:
    push:
      branches:
        - main
        - model-dev
    workflow_dispatch:

jobs:
    run-model-tests:
      permissions:
          contents: 'read'
          id-token: 'write'
      env:
        LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        LANGSMITH_PROJECT: "linkedlens-test"
        LANGSMITH_TRACING: "true"
        LANGSMITH_ENDPOINT: "https://api.smith.langchain.com"
        GOOGLE_PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}
        PROMPT_VERSION_QUERY_ANALYZER: ${{ secrets.PROMPT_VERSION_QUERY_ANALYZER }}
        PROMPT_ID_QUERY_ANALYZER: ${{ secrets.PROMPT_ID_QUERY_ANALYZER }}
        PROMPT_VERSION_FINAL_RESPONSE: ${{ secrets.PROMPT_VERSION_FINAL_RESPONSE }}
        PROMPT_ID_FINAL_RESPONSE: ${{ secrets.PROMPT_ID_FINAL_RESPONSE }}
        GOOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOOGLE_APPLICATION_CREDENTIALS }}
    
      name: Model Unit Tests
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: model-development/
    
      steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'
      
      - name: 'Set up Python'
        uses: actions/setup-python@v2
        with:
          python-version: 3.12
      
      - name: Install dependencies
        working-directory: model-development/src/
        run: pip install -r requirements.txt
      
      - name: Run unittests
        id: model-unit-test
        working-directory: model-development
        run: python -m unittest discover -s test || echo "Test failed"
      
      - name: Log model unit test results
        uses: ./.github/actions/log-results
        with:
          severity: ${{ steps.model-unit-test.outputs.result == 'Test failed' && 'ERROR' || 'INFO' }}
          message: ${{ steps.model-unit-test.outputs.result == 'Test failed' && 'Model Unit tests failed' || 'Model Unit tests passed succesfully' }}
          workflow_type: 'Unit Tests'
          success: ${{ steps.model-unit-test.outputs.result == 'Test failed' && false || true }}
      
      - name: Calculate Commit Hash
        run: echo "COMMIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
      
      - name: Model evaluation
        working-directory: model-development
        run: python pre_eval.py
          
    
    run-data-pipeline-tests:
        permissions:
            contents: 'read'
            id-token: 'write'
      
        name: Data Pipeline Unit Tests
        runs-on: ubuntu-latest
    
        steps:
        - name: 'Checkout'
          uses: 'actions/checkout@v2'
        
        - name: 'Set up Python'
          uses: actions/setup-python@v2
          with:
            python-version: 3.12
        
        - name: Install dependencies
          run: pip install -r requirements.txt
        
        - name: Run data generation unittests
          id: data-gen-test
          working-directory: data-pipelines/data-generation/dags
          run: python -m unittest test.test_unittest || echo "Test failed"

        - name: Log data generation test result
          uses: ./.github/actions/log-results
          with:
            severity: ${{ steps.data-gen-test.outputs.result == 'Test failed' && 'ERROR' || 'INFO' }}
            message: ${{ steps.data-gen-test.outputs.result == 'Test failed' && 'Data Generation Pipeline Unit tests failed' || 'Data Generation Pipeline Unit tests passed succesfully' }}
            workflow_type: 'Unit Tests'
            success: ${{ steps.data-gen-test.outputs.result == 'Test failed' && false || true }}
    
        
        - name: Run data ingestion unittests
          id: data-ing-test
          working-directory: data-pipelines/data-ingestion/dags
          run: pytest ./tests/
        
        - name: Log data ingestion test result
          uses: ./.github/actions/log-results
          with:
            severity: ${{ steps.data-ing-test.outputs.result == 'Test failed' && 'ERROR' || 'INFO' }}
            message: ${{ steps.data-ing-test.outputs.result == 'Test failed' && 'Data Ingestion Pipeline Unit tests failed' || 'Data Ingestion Pipeline Unit tests passed succesfully' }}
            workflow_type: 'Unit Tests'
            success: ${{ steps.data-ing-test.outputs.result == 'Test failed' && false || true }}

    deploy-model:
      needs: run-model-tests
      if: success()
      uses: ./.github/workflows/deploy-to-gke.yml